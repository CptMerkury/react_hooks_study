{"version":3,"sources":["examples/stateHook.jsx","examples/effectHook.jsx","examples/refHook.jsx","examples/memoHook.jsx","examples/callbackHook/itemList.jsx","examples/callbackHook/calbackHook.jsx","examples/contextHook/AlertContext.jsx","examples/contextHook/Alert.jsx","examples/contextHook/Main.jsx","examples/contextHook/contextHook.jsx","examples/reducerHook/AlertReducer.jsx","examples/reducerHook/Alert.jsx","examples/reducerHook/Main.jsx","examples/reducerHook/reducerHook.jsx","examples/customHook.jsx","App.js","reportWebVitals.js","index.js"],"names":["StateHook","getCurrentTime","Date","toTimeString","replace","useState","Math","trunc","random","counter","setCounter","title","date","withJSON","state","setState","useEffect","timerID","setInterval","prev","clearInterval","className","onClick","prevState","JSON","stringify","EffectHook","type","setType","data","setData","x","y","pos","setPos","mouseMoveHandler","event","clientX","clientY","console","log","axios","then","response","window","addEventListener","removeEventListener","RefHook","text","setText","countRender","useRef","prevValue","inputFocus","current","ref","onChange","e","target","value","focus","MemoHook","number","setNumber","color","setColor","compute","useMemo","num","i","complexVeryHardCopmuted","styles","style","ItemList","props","items","setItems","newItems","getItems","map","CallbackHook","count","setCount","generateElementAPI","useCallback","Array","fill","item","idx","AlertContext","React","createContext","useAlert","useContext","AlertProvider","children","alert","setAlert","Provider","visible","toggleAlert","Alert","Main","ContextHook","AlertReducer","useReducer","action","payload","dispatch","show","hide","placeholder","ReducerHook","useLogger","useInput","initialValue","setValue","bind","clear","CustomHook","NameInput","LastNameInput","App","isStateHooks","isEffectHooks","isRefHooks","isMemoHooks","isCallbackHooks","isContextHooks","isReducerHooks","isCustomHooks","ACTION","showExample","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5343e427.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nconst StateHook = () => {\n\n    const getCurrentTime = () => {\n        return new Date().toTimeString().replace(/ .*/, '');\n    }\n\n    const computeInitialState = () => {\n        return Math.trunc(Math.random() * 250)\n    }\n\n    const [counter, setCounter] = useState(() => {\n        return computeInitialState()\n    })\n\n    const [state, setState] = useState({\n        title: 'Local Time',\n        date: getCurrentTime(),\n        withJSON: false\n    })\n\n    const increment = () => {\n        setCounter((prevState) => {\n            return prevState + 1\n        })\n    }\n\n    const decrement = () => {\n        setCounter((prev) => prev - 1)\n    }\n\n    const toggleWithJson = () => {\n        setState((prev) => {\n            return {\n                ...prev,\n                withJSON: !prev.withJSON\n            }\n        })\n    }\n\n    useEffect(() => {\n        const timerID = setInterval(() => {\n            setState((prev) => {\n                return {\n                    ...prev,\n                    date: getCurrentTime()\n                }\n            })\n        }, 1000)\n\n        return () => {\n            clearInterval(timerID)\n        }\n    })\n\n    return (\n        <div className='paragraph bg-light p-3'>\n            <h3 className='text-secondary mb-1'>Random Counter: {counter}</h3>\n            <button className='btn-success btn btn-sm' onClick={increment}>Increment</button>\n            <button className='btn-danger btn btn-sm m-2' onClick={decrement}>Decrement</button>\n            <button className='btn-warning btn btn-sm' onClick={toggleWithJson}>to JSON</button>\n            <h4 className='text-primary mb-0 '>{state.title}</h4>\n            <p className='timer'>{state.date}</p>\n            {!state.withJSON\n                ? null\n                : <pre>{JSON.stringify(state, null, 2)}</pre>\n            }\n        </div>\n    )\n}\nexport default StateHook","import React, {useState, useEffect} from 'react'\nimport * as axios from \"axios\";\n\nconst EffectHook = () => {\n\n    const [type, setType] = useState('users')\n    const [data, setData] = useState([])\n    const [pos, setPos] = useState({\n        x: 0, y: 0\n    })\n\n    const mouseMoveHandler = (event => {\n        setPos({\n            x: event.clientX,\n            y: event.clientY\n        })\n        console.log(event.clientX, event.clientY)\n    })\n\n    useEffect(() => {\n        axios.get(`https://jsonplaceholder.typicode.com/${type}?_start=0&_limit=3`)\n            .then(response => setData(JSON.stringify(response.data, null, 2)))\n    }, [type])\n\n    useEffect(() => {\n        window.addEventListener('mousemove', mouseMoveHandler)\n\n        return () => {\n            window.removeEventListener('mousemove', mouseMoveHandler)\n        }\n    }, [])\n\n    return (\n        <div className='paragraph bg-light p-3'>\n            <h3>Response: {type}</h3>\n            <span>\n                <p>X : {pos.x}</p>\n                <p>Y : {pos.y}</p>\n            </span>\n            <button onClick={() => setType('users')} className='btn btn-sm btn-primary'>Users</button>\n            <button onClick={() => setType('todos')} className='btn btn-sm btn-success m-2'>Todo</button>\n            <button onClick={() => setType('posts')} className='btn btn-sm btn-warning'>Posts</button>\n            <pre>{data}</pre>\n        </div>\n    )\n}\nexport default EffectHook","import React, {useState, useEffect, useRef} from 'react'\n\nconst RefHook = () => {\n\n    const [text, setText] = useState('May the force be with you')\n    const countRender = useRef(1)\n    const prevValue = useRef('')\n    const inputFocus = useRef(null)\n\n    useEffect(() => {\n        countRender.current++\n    })\n\n    useEffect(() => {\n        prevValue.current = text\n    }, [text])\n\n    const focus = () => inputFocus.current.focus()\n\n    return (\n        <div className='bg-light p-3'>\n            <p>Now message : {text}</p>\n            <p>Previous message : {prevValue.current}</p>\n            <input\n                ref={inputFocus}\n                type=\"text\"\n                onChange={(e) => setText(e.target.value)}\n                value={text}\n                className='form-control mb-1'\n            />\n            <h6>Rerender : {countRender.current}</h6>\n            <div>\n                <button onClick={focus} className='btn btn-sm btn-warning'>Input Focus</button>\n            </div>\n        </div>\n    )\n}\nexport default RefHook","import React, {useState, useMemo} from 'react'\n\nconst complexVeryHardCopmuted = (num) => {\n    let i = 0\n    while (i < 1000000000) i++\n    return num * 2\n}\n\nconst MemoHook = () => {\n\n    const [number, setNumber] = useState(42)\n    const [color, setColor] = useState(false)\n\n    const compute = useMemo(() => {\n        return complexVeryHardCopmuted(number)\n    }, [number])\n\n    const styles = useMemo(() => ({\n        color: color ? 'crimson' : 'dodgerblue'\n    }), [color])\n\n    return (\n        <div className='bg-light p-3'>\n            <h3 style={styles}>State number : {number}</h3>\n            <h5>Equals number : {compute}</h5>\n            <button\n                className='btn btn-sm btn-success m-1'\n                onClick={() => setNumber(prev => prev + 1)}>Add</button>\n            <button\n                className='btn btn-sm btn-danger m-1'\n                onClick={() => setNumber(prev => prev - 1)}>Take Away</button>\n            <button\n                className='btn btn-sm btn-warning m-1'\n                onClick={() => setColor(prev => !prev)}>Change Color</button>\n        </div>\n    )\n}\nexport default MemoHook","import React, {useEffect, useState} from 'react'\n\nconst ItemList = (props) => {\n    const [items, setItems] = useState([])\n\n    useEffect(() => {\n        const newItems = props.getItems\n        setItems(newItems)\n        console.log('render')\n    }, [props.getItems])\n\n    return (\n        <ul className='list-group p-2'>\n            {items.map(i => (<li className='list-group-item' key={i}>{i}</li>))}\n        </ul>\n    )\n}\n\nexport default ItemList","import React, {useState, useCallback, useMemo} from 'react'\nimport ItemList from \"./itemList\";\n\nconst CallbackHook = () => {\n    const [count, setCount] = useState(1)\n    const [color, setColor] = useState(false)\n\n    const styles = useMemo(() => ({\n        color: color ? 'crimson' : 'dodgerblue'\n    }), [color])\n\n    const generateElementAPI = useCallback(() => {\n        return new Array(count).fill('').map((item, idx) => `Element #${idx + 1}`)\n    }, [count])\n\n    return (\n        <div className='bg-light p-3'>\n            <h3 style={styles}>Count elements : {count}</h3>\n            <button\n                className='btn btn-sm btn-success m-1'\n                onClick={() => setCount(prev => prev + 1)}>Add\n            </button>\n            <button\n                className='btn btn-sm btn-warning m-1'\n                onClick={() => setColor(prev => !prev)}>Change\n            </button>\n            <ItemList getItems={generateElementAPI}/>\n        </div>\n    )\n}\nexport default CallbackHook","import React, {useState, useContext} from \"react\";\n\nconst AlertContext = React.createContext()\n\nexport const useAlert = () => useContext(AlertContext)\n\nconst AlertProvider = ({children}) => {\n\n    const [alert, setAlert] = useState(false)\n    const toggleAlert = () => setAlert(prev => !prev)\n\n    return (\n        <AlertContext.Provider value={{visible: alert, toggleAlert}}>\n                {children}\n        </AlertContext.Provider>\n    )\n}\n\nexport default AlertProvider","import React from \"react\";\nimport {useAlert} from \"./AlertContext\";\n\nconst Alert = () => {\n\n    const alert = useAlert()\n\n    if (!alert.visible) {\n        return null\n    }\n    return (\n        <div className='alert alert-danger' onClick={alert.toggleAlert}>\n            Important Alert\n        </div>\n    )\n}\n\nexport default Alert","import React from 'react'\nimport {useAlert} from \"./AlertContext\";\n\nconst Main = () => {\n\n    const {toggleAlert} = useAlert()\n\n    return (\n        <div>\n            <h4>Look this alert, with help Context</h4>\n            <button\n                className='btn btn-success btn-sm'\n                onClick={toggleAlert}>Show Alert\n            </button>\n        </div>\n    )\n}\n\nexport default Main","import React from 'react'\nimport Alert from \"./Alert\";\nimport Main from \"./Main\";\nimport AlertProvider from \"./AlertContext\";\n\nconst ContextHook = () => {\n    return (\n        <AlertProvider>\n            <div className='wrapper bg-light p-3'>\n                <Alert/>\n                <Main/>\n            </div>\n        </AlertProvider>\n    )\n}\nexport default ContextHook","import React, {useContext, useReducer} from \"react\";\n\nconst AlertReducer = React.createContext()\nexport const useAlert = () => useContext(AlertReducer)\n\nconst AlertProvider = ({children}) => {\n\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case 'SHOW':\n                return {\n                    ...state,\n                    visible: true,\n                    text: action.payload\n                }\n            case 'HIDE' :\n                return {\n                    ...state,\n                    visible: false\n                }\n            default :\n                return state;\n        }\n    }\n\n    const [state, dispatch] = useReducer(reducer, {\n        visible: false,\n        text: ''\n    })\n\n    const show = (text) => dispatch({type: 'SHOW', payload: text})\n    const hide = () => dispatch({type: 'HIDE'})\n\n    return (\n        <AlertReducer.Provider value={{\n            visible: state.visible,\n            text: state.text,\n            show,\n            hide\n        }}>\n            {children}\n        </AlertReducer.Provider>\n    )\n}\n\nexport default AlertProvider","import React from \"react\";\nimport {useAlert} from \"./AlertReducer\";\n\nconst Alert = () => {\n\n    const alert = useAlert()\n\n    if (!alert.visible) {\n        return null\n    }\n    return (\n        <div className='alert alert-danger' onClick={alert.hide}>\n            {alert.text}\n        </div>\n    )\n}\n\nexport default Alert","import React, {useState} from 'react'\nimport {useAlert} from \"./AlertReducer\";\n\nconst Main = () => {\n\n    const alert = useAlert()\n\n    const [text, setText] = useState('Hash!!')\n\n    const getText = (e) => {\n        setText(e.target.value)\n    }\n\n    return (\n        <div>\n            <h4>Write you custom alert</h4>\n            <input type=\"text\" className='form-control' onChange={getText} placeholder={'Write here'}/>\n            <button\n                className='btn btn-success btn-sm m-3'\n                onClick={() => alert.show(text)}>Show Alert\n            </button>\n        </div>\n    )\n}\n\nexport default Main","import React from 'react'\nimport Alert from \"./Alert\";\nimport Main from \"./Main\";\nimport AlertProvider from \"./AlertReducer\";\n\nconst ReducerHook = () => {\n    return (\n        <AlertProvider>\n            <div className='wrapper bg-light p-3'>\n                <Alert/>\n                <Main/>\n            </div>\n        </AlertProvider>\n    )\n}\nexport default ReducerHook","import React, {useState, useEffect} from 'react'\n\nfunction useLogger(value) {\n    useEffect(() => {\n        console.log('Value changed: ', value)\n    }, [value])\n}\n\nfunction useInput(initialValue) {\n    const [value, setValue] = useState(initialValue)\n\n    const onChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    const clear = () => setValue('')\n\n    return {\n        bind: {value, onChange, type: 'text',},\n        value,\n        clear\n    }\n}\n\nconst CustomHook = () => {\n\n    const NameInput = useInput('')\n    const LastNameInput = useInput('')\n\n    useLogger(NameInput.value)\n    useLogger(LastNameInput.value)\n\n    const ClearField = () => {\n        NameInput.clear()\n        LastNameInput.clear()\n    }\n\n    return (\n        <div className='bg-light p-3'>\n            <h4>Custom Hooks</h4>\n            <input {...NameInput.bind} placeholder={'Name'} className='m-3'/>\n            <input {...LastNameInput.bind} placeholder={'Last Name'} className='mb-3'/>\n            <hr/>\n            <p className='text-primary'>Name: {NameInput.value}</p>\n            <p className='text-primary'>Last Name: {LastNameInput.value}</p>\n            <hr/>\n            <button onClick={ClearField} className='btn btn-danger'>Clear Fields</button>\n        </div>\n    )\n}\nexport default CustomHook","import './App.css';\nimport React, {useState} from \"react\";\nimport StateHook from \"./examples/stateHook\";\nimport EffectHook from \"./examples/effectHook\";\nimport RefHook from \"./examples/refHook\";\nimport MemoHook from \"./examples/memoHook\";\nimport CallbackHook from \"./examples/callbackHook/calbackHook\";\nimport ContextHook from \"./examples/contextHook/contextHook\";\nimport ReducerHook from \"./examples/reducerHook/reducerHook\";\nimport CustomHook from \"./examples/customHook\";\n\nfunction App() {\n    let [state, setState] = useState({\n        isStateHooks: false,\n        isEffectHooks: false,\n        isRefHooks: false,\n        isMemoHooks: false,\n        isCallbackHooks: false,\n        isContextHooks: false,\n        isReducerHooks: false,\n        isCustomHooks: false,\n    })\n    const ACTION = {\n        STATE_HOOK: 'STATE_HOOK',\n        EFFECT_HOOK: 'EFFECT_HOOK',\n        REF_HOOK: 'REF_HOOK',\n        MEMO_HOOK: 'MEMO_HOOK',\n        CALLBACK_HOOK: 'CALLBACK_HOOK',\n        CONTEXT_HOOK: 'CONTEXT_HOOK',\n        REDUCER_HOOK: 'REDUCER_HOOK',\n        CUSTOM_HOOK: 'CUSTOM_HOOK',\n    }\n\n\n    const showExample = (action) => {\n        switch (action) {\n            case ACTION.STATE_HOOK :\n                setState((prev) => {\n                    return {\n                        ...prev,\n                        isStateHooks: !prev.isStateHooks\n                    }\n                })\n                break;\n            case ACTION.EFFECT_HOOK :\n                setState((prev) => {\n                    return {\n                        ...prev,\n                        isEffectHooks: !prev.isEffectHooks\n                    }\n                })\n                break;\n            case ACTION.REF_HOOK :\n                setState((prev) => {\n                    return {\n                        ...prev,\n                        isRefHooks: !prev.isRefHooks\n                    }\n                })\n                break;\n            case ACTION.MEMO_HOOK :\n                setState((prev) => {\n                    return {\n                        ...prev,\n                        isMemoHooks: !prev.isMemoHooks\n                    }\n                })\n                break;\n            case ACTION.CALLBACK_HOOK :\n                setState((prev) => {\n                    return {\n                        ...prev,\n                        isCallbackHooks: !prev.isCallbackHooks\n                    }\n                })\n                break;\n            case ACTION.CONTEXT_HOOK :\n                setState((prev) => {\n                    return {\n                        ...prev,\n                        isContextHooks: !prev.isContextHooks\n                    }\n                })\n                break;\n            case ACTION.REDUCER_HOOK :\n                setState((prev) => {\n                    return {\n                        ...prev,\n                        isReducerHooks: !prev.isReducerHooks\n                    }\n                })\n                break;\n            case ACTION.CUSTOM_HOOK :\n                setState((prev) => {\n                    return {\n                        ...prev,\n                        isCustomHooks: !prev.isCustomHooks\n                    }\n                })\n                break;\n            default:\n                return state\n        }\n    }\n\n    return (\n        <div className=\"App m-4\">\n            <div>\n                <button\n                    onClick={() => showExample('STATE_HOOK')}\n                    className='btn btn-primary m-4'>\n                    Show useState\n                </button>\n                {!state.isStateHooks ? null : <StateHook/>}\n            </div>\n            <div>\n                <button\n                    onClick={() => showExample('EFFECT_HOOK')}\n                    className='btn btn-primary m-4'>\n                    Show useEffect\n                </button>\n                {!state.isEffectHooks ? null : <EffectHook/>}\n            </div>\n            <div>\n                <button\n                    onClick={() => showExample('REF_HOOK')}\n                    className='btn btn-primary m-4'>\n                    Show useRef\n                </button>\n                {!state.isRefHooks ? null : <RefHook/>}\n            </div>\n            <div>\n                <button\n                    onClick={() => showExample('MEMO_HOOK')}\n                    className='btn btn-primary m-4'>\n                    Show useMemo\n                </button>\n                {!state.isMemoHooks ? null : <MemoHook/>}\n            </div>\n            <div>\n                <button\n                    onClick={() => showExample('CALLBACK_HOOK')}\n                    className='btn btn-primary m-4'>\n                    Show useCallback\n                </button>\n                {!state.isCallbackHooks ? null : <CallbackHook/>}\n            </div>\n            <div>\n                <button\n                    onClick={() => showExample('CONTEXT_HOOK')}\n                    className='btn btn-primary m-4'>\n                    Show useContext\n                </button>\n                {!state.isContextHooks ? null : <ContextHook/>}\n            </div>\n            <div>\n                <button\n                    onClick={() => showExample('REDUCER_HOOK')}\n                    className='btn btn-primary m-4'>\n                    Show useReducer\n                </button>\n                {!state.isReducerHooks ? null : <ReducerHook/>}\n            </div>\n            <div>\n                <button\n                    onClick={() => showExample('CUSTOM_HOOK')}\n                    className='btn btn-primary m-4'>\n                    Show custom hook\n                </button>\n                {!state.isCustomHooks ? null : <CustomHook/>}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}